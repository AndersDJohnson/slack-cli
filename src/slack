#!/usr/bin/env bash

config=

function iconkey() { if [[ ${1:0:1} == ":" ]] ; then echo 'icon_emoji' ; else echo 'icon_url' ; fi }

case "${1}" in
  init)
    while (( "$#" )); do
      case "${2}" in
        --channel=*) channel=${2/--channel=/''} ; shift ;;
        --icon=*) icon=${2/--icon=/''} ; shift ;;
        --silent) silent='0' ; shift ;;
        --username=*) username=${2/--username=/''} ; shift ;;
        --webhook=*) webhook=${2/--webhook=/''} ; shift ;;
        -c*) channel=${3} ; shift ; shift ;;
        -i*) icon=${3} ; shift ; shift ;;
        -s) silent='0' ; shift ;;
        -u*) username=${3} ; shift ; shift ;;
        -w*) webhook=${3} ; shift ; shift ;;
        *) shift ;;
      esac
    done

    test -z "${webhook}" && read -e -p 'Enter webhook (e.g. https://hooks.slack.com/services/XXX/XXX/XXX): ' webhook
    test -z "${channel}" && read -e -p 'Enter default channel (e.g. #general): ' channel
    test -z "${username}" && read -e -p 'Enter username (e.g. username-bot): ' username
    test -z "${icon}" && read -e -p 'Enter icon (e.g. :robot_face:, https://avatars3.githubusercontent.com/u/XXX): ' icon

    test -z "${silent}" && echo -n 'Initializing: '
    echo "${webhook}" > "${config}" && \
    echo "${channel}" >> "${config}" && \
    echo "${username}" >> "${config}" && \
    echo "${icon}" >> "${config}"
    case "$?" in
      0) test -z "${silent}" && echo 'done' ;;
      *) test -z "${silent}" && echo 'fail' ; exit 1 ;;
    esac
  ;;

  send)
    channel=$(sed -n '2p' < "${config}")
    icon=$(sed -n '4p' < "${config}")
    username=$(sed -n '3p' < "${config}")
    webhook=$(sed -n '1p' < "${config}")
    test -p /dev/stdin && stdin=$(cat <&0)

    while (( "$#" )); do
      case "${2}" in
        --author=*) author=${2/--author=/''} ; shift ;;
        --author-icon=*) authoricon=${2/--author-icon=/''} ; shift ;;
        --author-link=*) authorlink=${2/--author-link=/''} ; shift ;;
        --channel=*) channel=${2/--channel=/''} ; shift ;;
        --color=*) color=${2/--color=/''} ; shift ;;
        --image=*) image=${2/--image-url=/''} ; shift ;;
        --pretext=*) pretext=${2/--pretext=/''} ; shift ;;
        --silent) silent='0' ; shift ;;
        --text=*) text=${2/--text=/''} ; shift ;;
        --thumbnail=*) thumbnail=${2/--thumbnail=/''} ; shift ;;
        --title=*) title=${2/--title=/''} ; shift ;;
        --title-link=*) titlelink=${2/--title-link=/''} ; shift ;;
        -a*) author=${3} ; shift ; shift ;;
        -c*) channel=${3} ; shift ; shift ;;
        -C*) color=${3} ; shift ; shift ;;
        -h*) thumbnail=${3} ; shift ; shift ;;
        -i*) image=${3} ; shift ; shift ;;
        -I*) authoricon=${3} ; shift ; shift ;;
        -l*) titlelink=${3} ; shift ; shift ;;
        -L*) authorlink=${3} ; shift ; shift ;;
        -p*) pretext=${3} ; shift ; shift ;;
        -s) silent='0' ; shift ;;
        -t*) text=${3} ; shift ; shift ;;
        -T*) title=${3} ; shift ; shift ;;
        *)
          test -z "${stdin}" && test -n "${2}" && test -n "${text}" && channel=${2}
          test -z "${stdin}" && test -n "${2}" && test -z "${text}" && text=${2}
          test -n "${stdin}" && test -z "${text}" && text=${stdin//$'\n'/'\n'}
          shift
        ;;
      esac
    done

    test -z "${text}" && read -e -p 'Enter text (e.g. Hello World!): ' text

    test -n "${author}" && _author=", \"author_name\": \"${author}\""
    test -n "${authoricon}" && _authoricon=", \"author_icon\": \"${authoricon}\""
    test -n "${authorlink}" && _authorlink=", \"author_link\": \"${authorlink}\""
    test -n "${color}" && _color=", \"color\": \"${color}\""
    test -n "${image}" && _image=", \"image_url\": \"${image}\""
    test -n "${pretext}" && _pretext=", \"pretext\": \"${pretext}\""
    test -n "${thumbnail}" && _thumbnail=", \"thumb_url\": \"${thumbnail}\""
    test -n "${title}" && _title=", \"title\": \"${title}\""
    test -n "${titlelink}" && _titlelink=", \"title_link\": \"${titlelink}\""
    _payload="payload={\"attachments\": [{\"mrkdwn_in\": [\"text\", \"pretext\"], \"fallback\": \"${text}\", \"text\": \"${text}\"${_author}${_authoricon}${_authorlink}${_color}${_image}${_pretext}${_thumbnail}${_title}${_titlelink}}], \"channel\": \"${channel}\", \"username\": \"${username}\", \"$(iconkey ${icon})\": \"${icon}\"}"

    test -z "${silent}" && echo -n 'Sending: '
    curl --silent --fail --request POST --data-urlencode "${_payload}" "${webhook}" > /dev/null
    case "$?" in
      0) test -z "${silent}" && echo 'done' ;;
      *) test -z "${silent}" && echo 'fail' ; exit 1 ;;
    esac
  ;;

  --help)
    a=(${0//\// })
    bin=${a[${#a[@]}-1]}

    echo 'Usage:'
    echo "  ${bin} init [--channel|-c <channel>] [--icon|-i <icon>] [--silent|-s]"
    echo "    [--username|-u <username>] [--webhook|-w <webhook>]"
    echo "  ${bin} send <text> [channel] [--author|-a <author>] [--author-icon|-I <author-icon-url>]"
    echo "    [--author-link|-L <author-link>] [--channel|-c <channel>] [--color|-C <color>]"
    echo "    [--image|-i <image-url>] [--pretext|-p <pretext>] [--silent|-s]"
    echo "    [--thumbnail|-H <thumbnail-url>] [--title|-t <title>] [--title-link|-l <title-link>]"
    echo
    echo "Setup Commands:"
    echo "  init     Initialize"
    echo
    echo "Core Commands:"
    echo "  send     Send message"
  ;;

  --version) echo 'v0.7.2' ;;

  *) ${0} --help ; exit 1 ;;
esac

exit 0
