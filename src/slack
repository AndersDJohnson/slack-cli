#!/usr/bin/env bash

bindir=
etcdir=

function _channel() {
  case "${1}" in
    @*)
      local user=$(\
        curl -s -X POST --data-urlencode "token=${2}" https://slack.com/api/users.list 2>&1 | \
        jq -r ".members | map(select(.name == \"${1/@/}\")) | .[].id")
      local channel=$(\
        curl -s -X POST --data-urlencode "token=${2}" https://slack.com/api/im.list 2>&1 | \
        jq -r ".ims | map(select(.user == \"${user}\")) | .[].id")

      echo ${channel}
    ;;
    *) echo ${1} ;;
  esac
}

case "${1}" in
  init)
    while (( "$#" )); do
      case "${2}" in
        --channel=*) channel=${2/--channel=/''} ; shift ;;
        --silent) silent='0' ; shift ;;
        --token=*) token=${2/--token=/''} ; shift ;;
        -c*) channel=${3} ; shift ; shift ;;
        -s) silent='0' ; shift ;;
        -t*) token=${3} ; shift ; shift ;;
        *) shift ;;
      esac
    done

    test -z "${token}" && read -e -p 'Enter token: ' token
    test -z "${channel}" && read -e -p 'Enter default channel (e.g. #general): ' channel

    test -z "${silent}" && echo -n 'Initializing: '
    echo "${token}" > "${etcdir}/slack-cli" && \
    echo "${channel}" >> "${etcdir}/slack-cli"
    case "$?" in
      0) test -z "${silent}" && echo 'done' ;;
      *) test -z "${silent}" && echo 'fail' ; exit 1 ;;
    esac
  ;;

  send)
    channel=$(sed -n '2p' < "${etcdir}/slack-cli")
    token=$(sed -n '1p' < "${etcdir}/slack-cli")
    test -p /dev/stdin && stdin=$(cat <&0)

    while (( "$#" )); do
      case "${2}" in
        --author=*) author=${2/--author=/''} ; shift ;;
        --author-icon=*) authoricon=${2/--author-icon=/''} ; shift ;;
        --author-link=*) authorlink=${2/--author-link=/''} ; shift ;;
        --channel=*) channel=${2/--channel=/''} ; shift ;;
        --color=*) color=${2/--color=/''} ; shift ;;
        --image=*) image=${2/--image-url=/''} ; shift ;;
        --pretext=*) pretext=${2/--pretext=/''} ; shift ;;
        --silent) silent='0' ; shift ;;
        --text=*) text=${2/--text=/''} ; shift ;;
        --thumbnail=*) thumbnail=${2/--thumbnail=/''} ; shift ;;
        --title=*) title=${2/--title=/''} ; shift ;;
        --title-link=*) titlelink=${2/--title-link=/''} ; shift ;;
        -a*) author=${3} ; shift ; shift ;;
        -c*) channel=${3} ; shift ; shift ;;
        -C*) color=${3} ; shift ; shift ;;
        -h*) thumbnail=${3} ; shift ; shift ;;
        -i*) image=${3} ; shift ; shift ;;
        -I*) authoricon=${3} ; shift ; shift ;;
        -l*) titlelink=${3} ; shift ; shift ;;
        -L*) authorlink=${3} ; shift ; shift ;;
        -p*) pretext=${3} ; shift ; shift ;;
        -s) silent='0' ; shift ;;
        -t*) text=${3} ; shift ; shift ;;
        -T*) title=${3} ; shift ; shift ;;
        *)
          test -z "${stdin}" && test -n "${2}" && test -n "${text}" && channel=${2}
          test -z "${stdin}" && test -n "${2}" && test -z "${text}" && text=${2}
          test -n "${stdin}" && test -z "${text}" && text=\`\`\`${stdin//$'\n'/'\n'}\`\`\`
          shift
        ;;
      esac
    done

    test -z "${text}" && read -e -p 'Enter text (e.g. Hello World!): ' text

    test -n "${author}" && authorjson=", \"author_name\": \"${author}\""
    test -n "${authoricon}" && authoriconjson=", \"author_icon\": \"${authoricon}\""
    test -n "${authorlink}" && authorlinkjson=", \"author_link\": \"${authorlink}\""
    test -n "${color}" && colorjson=", \"color\": \"${color}\""
    test -n "${image}" && imagejson=", \"image_url\": \"${image}\""
    test -n "${pretext}" && pretextjson=", \"pretext\": \"${pretext}\""
    test -n "${thumbnail}" && thumbnailjson=", \"thumb_url\": \"${thumbnail}\""
    test -n "${title}" && titlejson=", \"title\": \"${title}\""
    test -n "${titlelink}" && titlelinkjson=", \"title_link\": \"${titlelink}\""
    json="${authorjson}${authoriconjson}${authorlinkjson}${colorjson}${imagejson}${pretextjson}${thumbnailjson}${titlejson}${titlelinkjson}"
    test -z "${json}" && attachments="[{\"mrkdwn_in\": [\"pretext\"], \"fallback\": \"${text}\", \"pretext\": \"${text}\"}]"
    test -n "${json}" && attachments="[{\"mrkdwn_in\": [\"fields\", \"pretext\", \"text\"], \"fallback\": \"${text}\", \"text\": \"${text}\"${json}}]"

    test -z "${silent}" && echo -n 'Sending: '
    msg=$(\
      curl -s -X POST \
        --data-urlencode "as_user=true" \
        --data-urlencode "channel=$(_channel ${channel} ${token})" \
        --data-urlencode "attachments=${attachments}" \
        --data-urlencode "token=${token}" \
        https://slack.com/api/chat.postMessage)
    case "$(echo ${msg} | jq -r '.ok')" in
      true) test -z "${silent}" && echo 'done' ;;
      *) test -z "${silent}" && echo 'fail' ; exit 1 ;;
    esac
  ;;

  --help|-h)
    a=(${0//\// })
    bin=${a[${#a[@]}-1]}

    echo 'Usage:'
    echo "  ${bin} init [--channel|-c <channel>] [--silent|-s] [--token|-t <token>]"
    echo "  ${bin} send <text> [channel] [--author|-a <author>] [--author-icon|-I <author-icon-url>]"
    echo "    [--author-link|-L <author-link>] [--channel|-c <channel>] [--color|-C <color>]"
    echo "    [--image|-i <image-url>] [--pretext|-p <pretext>] [--silent|-s]"
    echo "    [--thumbnail|-H <thumbnail-url>] [--title|-t <title>] [--title-link|-l <title-link>]"
    echo
    echo "Setup Commands:"
    echo "  init     Initialize"
    echo
    echo "Core Commands:"
    echo "  send     Send message"
  ;;

  --version|-v) echo 'v0.8.0' ;;

  *) ${0} --help ; exit 1 ;;
esac

exit 0
